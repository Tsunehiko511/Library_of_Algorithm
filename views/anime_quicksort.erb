<div class="container-fluid">
  <div id="main" class="container-fluid">
      <div id="subNav">
      <h3 class="bold">クイックソート</h3>
        <p>数列を昇順（or 降順）に整列させるアルゴリズム<br>
        アルゴリズムは「<b>ピボットと呼ばれる基点を作り，ピボットより小さいものは左側へ，大きものは右側へ移動させる</b>」。<br>左側と右側のそれぞれに対して「<b>ピボットを作り，ピボットより小さいものは左側へ，大きものは右側へ移動させる</b>」を繰り返す。<br>
        ピボットの決め方と，左右に分ける操作は多くのパターンが知られている。
        </p>
      </div>
  </div><!-- /main -->
  <br>
  <br>
  <!-- tab -->
  <div class="tabbale">
      <div id="content">
          <ul class="nav nav-tabs">
          <li class="active"><a href="#">アルゴリズムの解説</a></li>
          <li><a style="color:#000000;pointer-events:none;"></a></li>
          </ul>
      </div>
  </div>
  <br>

<div id="editor" class="avoid-clicks" style="height: 400px">
<b>//データ</b>
 配列 = [5,9,8,3,1,6,4]

<b>//目的</b>
 <span>配列を昇順に整列させる</span>

<b>//処理</b>
 left = 0
 right = 要素の個数-1

 クイックソート(配列, left, right):
　 if left&lt;right:
     pivot = left〜rightのどれか
     pivotを基点に左右に分ける
     クイックソート(配列, left, pivot-1)
     クイックソート(配列, pivot+1, right)









クイックソート関数(配列, 左端, 右端):
    if 配列の要素数 &lt;= 1:
        return 配列
    else:
        ピポット = 配列の要素からランダム
        ピポッドを基点に左右に分ける
        left  = ピポット以下の配列の要素すべて
        right = ピポットより大きい配列の要素すべて
        // 左右個別にソートする。
        左側 = クイックソート関数(left)
        右側 = クイックソート関数(right)

        return 左側 + [ピポット] + 右側
</div><!-- /editor -->
<div id="anime">
    <p>画面クリックで説明</p>
    <anime>

    </anime>
</div><!-- /anime -->
<div id="sub">

</div><!-- /sub -->
</div><!-- /container -->
<hr>
<script src="/js/src-min/ace.js"></script>
<script>
  var editor = ace.edit("editor");
  editor.renderer.setShowGutter(false);
  editor.setOptions({highlightActiveLine:false});
  editor.setTheme("ace/theme/monokai");//clouds,monokai,chrome
  editor.getSession().setMode("ace/mode/javascript");
    document.getElementById('editor').style.visibility="visible";
</script>
<script src="/js/d3.min.js" type="text/javascript" ></script>
<script src="/js/quicksort.js" type="text/javascript" ></script>

