<div id="header">
	<!-- <div id="footerNavLink"><a href="#footerNav"></a></div> -->
	<!--<div id="footerNavLink"><a href="#footerNav"></a></div>-->
	
	<h1></h1>
</div><!-- /header -->

<div id="container">
<div id="main">
		<h1>Library of Algorithms</h1>
		<div id="subNav">
			<h3>k近傍方</h3>
			<p>テストデータとの距離が短い順にk個の判定用データを取り出し、</br>多数決によってテストデータが所属するカテゴリーを推定する方法です。</p>
		</div>
</div><!-- /main -->
<hr>
<div id="code">
	<span>データ</span><br>
		<span>&emsp;TRAIN := [(a0,b0),(a1,b1),...,,(a6,b6)]</span><br>
		<span>&emsp;LABEL := [赤,青,...,赤]</span>
	<h3>目的</h3>
	<span>&emsp;(x,y) が赤か青か予測する</span><br>
	<h3>処理</h3>
	<span>&emsp;// kは人為的に決める</span><br>
	<span id="code1">&emsp;k := 3</span><br>
	<span>&emsp;// (x,y)とTRAIN要素の距離d0〜d6を調べる</span><br>
	<span id="code2">&emsp;for (ai,bi) ∈ TRAIN:</span><br>
	<span id="code3">&emsp;&emsp;di := 距離((x,y),(ai,bi))</span><br>
	<span>&emsp;// 距離diの添え字をdiが小さい順に並べる</span><br>
	<span id="code4">&emsp;near := [3,2,4,5,1,0,6]</span><br>
	<span>&emsp;// 判定</span><br>
	<span id="code5">&emsp;for i ∈ {0,1,...,k-1}:</span><br>
	<span id="code6">&emsp;&emsp;if LABEL[near[i]] == 赤:</span><br>
	<span id="code7">&emsp;&emsp;&emsp;赤の数 += 1</span><br>
	<span id="code8">&emsp;&emsp;if LABEL[near[i]] == 青:</span><br>
	<span id="code9">&emsp;&emsp;&emsp;青の数 += 1</span><br>
	<span id="code10">&emsp;if 赤の数 > 青の数:</span><br>
	<span id="code11">&emsp;&emsp;print "(x,y)は赤"</span><br>
	<span id="code12">&emsp;if 赤の数 < 青の数:</span><br>
	<span id="code13">&emsp;&emsp;print "(x,y)は青"</span><br>
	<p>
		<input type="button" value="ステップ" onClick="start()">
	</p>
</div><!-- /code -->

<div id="anime">
	<canvas width="700" height="450" id="sample">
	図形を表示するには、canvasタグをサポートしたブラウザが必要です。
	</canvas>
	<p>
		<input type="button" value="ステップ" onClick="anime(3)">
	</p>
	<br>
	<br>
</div><!-- /anime -->
<div id="sub">
	<a href="/def_kmean">戻る</a>
	<a href="/">ホーム</a>
	<a href="/que_kmean">次へ</a>
</div><!-- /sub -->
</div><!-- /container -->
<hr>
