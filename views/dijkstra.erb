<link rel="stylesheet" href="/css/dijkstra.css">

<div id="container">
	<div id="main">
		<div id="subNav">
			<h3>ダイクストラ法</h3>
			<p>最短経路を求めるアルゴリズム</p>
			<p>最短経路問題は、総当たりで解こうとすると膨大な時間がかかる。ダイクストラ法やその応用であるA*アルゴリズムは、最良優先探索、つまり、最もよさそうな選択肢から優先的に調べていくことで、大幅な効率化と計算時間の短縮が見込める。カーナビなど実用例も多い。</p>
		</div>
		<a href="/">戻る</a>　　<a>演習</a>　	　<a href="/">ホーム</a>
	</div><!-- /main -->
	<hr>
	<div id="code">
		<span class='bold'>データ</span><br>
		<span>&emsp;エッジ＝[1,6,2,4,4,1,7,5,2,3]</span><br>
		<span>&emsp;&emsp;（→各辺の長さ）</span><br>
		<span>&emsp;ノードのスコア＝[0,&infin;,&infin;,...,&infin;]</span><br>
		<span>&emsp;&emsp;（→各頂点までの暫定最短距離）</span><br>
		<p></p>
		<span class='bold'>処理</span><br>
		<span id='code0'>&emsp;未処理のノードがある限り:</span><br>
		<span id='code1'>&emsp;&emsp;現在のノード＝スコアが最小のノード</span><br>
		<span id='code2'>&emsp;&emsp;各未処理の隣接ノードについて:</span><br>
		<span id='code3'>&emsp;&emsp;&emsp;暫定距離＝現在のノードのスコア＋エッジ</span><br>
		<span id='code4'>&emsp;&emsp;&emsp;もし　隣接ノードのスコア＞暫定距離なら：</span><br>
		<span id='code5'>&emsp;&emsp;&emsp;&emsp;隣接ノードのスコア＝暫定距離</span><br>
		<span id='code6'>&emsp;&emsp;現在のノードを処理済みにする</span><br>
		<p></p>
		<span id='code7'>&emsp;ゴールノードの暫定距離が最短距離</span><br>
		<span id='code8'>終了</span><br><br>
	</div><!-- /code -->

	<div id="anime">
		<p>画面クリックで説明</p>
		<canvas width="600" height="300" id="sample">
			図形を表示するには、canvasタグをサポートしたブラウザが必要です。
		</canvas>
	</div><!-- /anime -->
</div><!-- /container -->

<script src='/js/dijkstra.js'></script>